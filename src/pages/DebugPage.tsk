// src/pages/DebugPage.tsx
import React, { useState } from 'react';
import { Box, Container, Typography, Paper, Button, Switch, FormControlLabel } from '@mui/material';
import { useDispatch, useSelector } from 'react-redux';
import { RootState } from '../store';
import ApiDebugUtility from '../components/debug/ApiDebugUtility';
import { setDemoMode, setApiEndpoint } from '../store/slices/configSlice';

const DebugPage: React.FC = () => {
  const dispatch = useDispatch();
  const { isDemoMode, apiEndpoint } = useSelector((state: RootState) => state.config);
  const [localEndpoint, setLocalEndpoint] = useState(apiEndpoint);
  
  const handleToggleDemoMode = () => {
    dispatch(setDemoMode(!isDemoMode));
  };
  
  const handleApiEndpointChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setLocalEndpoint(event.target.value);
  };
  
  const handleSaveApiEndpoint = () => {
    dispatch(setApiEndpoint(localEndpoint));
  };
  
  return (
    <Container maxWidth="lg">
      <Box my={4}>
        <Typography variant="h4" component="h1" gutterBottom>
          API Integration Debug Page
        </Typography>
        
        <Paper sx={{ p: 3, mb: 3 }}>
          <Typography variant="h6" gutterBottom>
            Application Configuration
          </Typography>
          
          <FormControlLabel
            control={
              <Switch
                checked={!isDemoMode}
                onChange={handleToggleDemoMode}
                name="demoMode"
                color="primary"
              />
            }
            label={`Mode: ${isDemoMode ? 'Demo (using mock data)' : 'Live (using API data)'}`}
          />
          
          <Box mt={2}>
            <Typography variant="subtitle1" gutterBottom>
              Current API Endpoint: {apiEndpoint}
            </Typography>
            <input
              type="text"
              value={localEndpoint}
              onChange={handleApiEndpointChange}
              style={{ 
                width: '100%', 
                padding: '8px', 
                border: '1px solid #ccc', 
                borderRadius: '4px',
                marginBottom: '16px'
              }}
              placeholder="Enter API endpoint URL"
            />
            <Button 
              variant="contained" 
              color="primary"
              onClick={handleSaveApiEndpoint}
            >
              Save API Endpoint
            </Button>
          </Box>
        </Paper>
        
        <ApiDebugUtility />
      </Box>
    </Container>
  );
};

export default DebugPage;